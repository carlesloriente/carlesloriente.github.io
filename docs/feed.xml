<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="3.9.5">Jekyll</generator><link href="https://www.notesoncloudcomputing.com/feed.xml" rel="self" type="application/atom+xml" /><link href="https://www.notesoncloudcomputing.com/" rel="alternate" type="text/html" hreflang="en" /><updated>2024-04-20T03:14:02+02:00</updated><id>https://www.notesoncloudcomputing.com/feed.xml</id><title type="html">Notes on Cloud Computing</title><subtitle>A collection of curated opinions and code snippets on cloud tech &lt;br&gt;Bridging knowledge and implementation for enthusiasts and professionals alike</subtitle><author><name>Carles Loriente</name></author><entry><title type="html">NOCC Bootstrap Theme Major Release v1</title><link href="https://www.notesoncloudcomputing.com/posts/2024-04-09-nocc-bootstrap-theme-major-release-v1/" rel="alternate" type="text/html" title="NOCC Bootstrap Theme Major Release v1" /><published>2024-04-09T20:40:05+02:00</published><updated>2024-04-09T20:40:05+02:00</updated><id>https://www.notesoncloudcomputing.com/posts/nocc-bootstrap-theme-major-release-v1</id><content type="html" xml:base="https://www.notesoncloudcomputing.com/posts/2024-04-09-nocc-bootstrap-theme-major-release-v1/"><![CDATA[<p><strong>Are you tired of outdated Bootstrap themes?</strong> Say hello to NOCC üéâ: A Modern Bootstrap 5 Theme!</p>

<p>An NPM Package that brings the power of NOCC directly to your NodeJS project. <a href="https://www.npmjs.com/package/nocc-bootstrap-theme">Get it now!</a>.</p>

<p class="text-center"><img src="/assets/images/nocc-theme-showroom.png" alt="NOCC Thene" class="img-fluid" /></p>

<p class="text-center"><strong>A Responsive Bootstrap 5 dual Theme</strong></p>

<h2 id="introduction">Introduction</h2>

<p><strong>Say hello to NOCC version 1 üéâ</strong>:</p>

<p>It comes in two powerful options:</p>

<ul>
  <li>
    <p>üåü Nocc Bootstrap Theme: An NPM Package that brings the power of NOCC directly to your NodeJS project. <a href="https://www.npmjs.com/package/nocc-bootstrap-theme" target="_blank">Get it now!</a></p>
  </li>
  <li>
    <p>üåê Full Site Bundle for Jekyll: A complete static website showcasing NOCC‚Äôs seamless integration. Featuring a beautifully designed homepage, dynamic tag cloud, image gallery, and more. <a href="https://github.com/carlesloriente/bootstrap-theme-jekyll" target="_blank">Explore on GitHub</a>.</p>
  </li>
</ul>

<h2 id="whats-changed">What‚Äôs Changed</h2>

<p>This is a significant upgrade, with massive refactoring and rebuilding.</p>

<h3 id="deployment--building">Deployment &amp; Building</h3>

<ul>
  <li>New workflows for testing and building automatically after a new PR</li>
  <li>Automatic package versioning triggered with labels</li>
  <li>Fix action to minimize CSS and JS</li>
</ul>

<h3 id="documentation">Documentation</h3>

<ul>
  <li>Added status badges</li>
  <li>Table of contents</li>
  <li>Updated content, added more detailed instructions</li>
  <li>Rebuild demo site (static folder)</li>
  <li>Created CODEOWNERS file</li>
  <li>Fix a few typos in the README file</li>
</ul>

<h3 id="file--structure">File &amp; Structure</h3>

<ul>
  <li>Created CODEOWNERS file</li>
  <li>Fix favicons path</li>
  <li>Tags index page and individual tag pages are created automatically on building.</li>
</ul>

<h3 id="logo-and-sample-images">Logo and sample images</h3>

<ul>
  <li>New NOCC logo and cooperative image</li>
  <li>Updated screenshots</li>
  <li>Optimised image file sizes</li>
</ul>

<h3 id="npm-package">NPM Package</h3>

<ul>
  <li>Spring cleaning scripts</li>
  <li>Fine-tuning of scripts</li>
  <li>Metadata</li>
  <li>Agressive package size optimisation, from ~35 to ~8 MB.</li>
</ul>

<h3 id="security">Security</h3>

<ul>
  <li>Remediation of security issue <a href="https://github.com/carlesloriente/nocc-bootstrap-theme/issues/16" target="_blank">#16</a></li>
</ul>

<h3 id="styles">Styles</h3>

<ul>
  <li>Added a carousel component on the home page</li>
  <li>Major refinement of styles</li>
  <li>Added styles for code blocks</li>
  <li>Better font-sizing</li>
  <li>Improved responsive</li>
</ul>]]></content><author><name>Carles Loriente</name></author><category term="nocc" /><category term="npm" /><category term="bootstrap" /><category term="nocc" /><category term="npm" /><category term="bootstrap" /><summary type="html"><![CDATA[An NPM Package that brings the power of NOCC directly to your NodeJS project]]></summary></entry><entry><title type="html">Fine-grained authorisation for cloud applications</title><link href="https://www.notesoncloudcomputing.com/posts/2024-02-13-fine-grained-authorisation-for-cloud-applications/" rel="alternate" type="text/html" title="Fine-grained authorisation for cloud applications" /><published>2024-02-13T10:40:05+01:00</published><updated>2024-02-13T10:40:05+01:00</updated><id>https://www.notesoncloudcomputing.com/posts/fine-grained-authorisation-for-cloud-applications</id><content type="html" xml:base="https://www.notesoncloudcomputing.com/posts/2024-02-13-fine-grained-authorisation-for-cloud-applications/"><![CDATA[<p>As cloud applications grow in complexity, managing who has access to what can become a security nightmare. Traditional, role-based authorisation often results in <strong>overly broad permissions</strong>, granting access beyond what is necessary. This introduces unnecessary risk and makes compliance a constant struggle.</p>

<p>Fortunately, <strong>fine-grained authorisation</strong> offers a more granular approach, allowing you to control access based on <strong>dynamic attributes</strong> specific to each request. But when does this level of detail become truly valuable?</p>

<ol>
  <li><strong>Data security with dynamic sensitivity</strong>: Imagine a healthcare platform where patient data sensitivity varies based on diagnosis or treatment stage. Fine-grained authorisation can restrict access to highly sensitive data to authorised personnel with specific needs.</li>
  <li><strong>Context-aware access control</strong>: Consider a microservices architecture where access needs to be tailored to the current request context. Attributes like user location, device type, or time of day can grant temporary access during maintenance or restrict sensitive actions outside business hours.</li>
  <li><strong>Implementing granular compliance policies</strong>: Meeting industry regulations often requires detailed access control. You can ensure compliance by automatically limiting access based on specific policies by leveraging attributes like department, project membership, or data classification.</li>
</ol>

<p><strong><a href="https://www.aserto.com/blog/attributes-authorization-when-to-use" target="_blank">When do you need attributes in fine-grained authorisation?</a></strong> It is a good introduction article with examples from <strong>Omri Gazitt</strong>.</p>

<p><img src="/assets/images/topaz_arch.webp" alt="Topez-architecture" /></p>

<h2 id="bibliography">Bibliography</h2>

<ul>
  <li><strong><a href="https://www.topaz.sh/" target="_blank">Topaz</a></strong>: An open-source authorisation providing fine-grained, real-time, policy-based access control for applications and APIs.</li>
  <li><strong><a href="https://www.aserto.com/" target="_blank">Aserto</a></strong>: Fine-grained, scalable authorization in minutes.</li>
</ul>]]></content><author><name>Carles Loriente</name></author><category term="cloud-security" /><category term="opa" /><category term="zanzibar" /><category term="fine-grained" /><category term="authorisation" /><category term="cloud-security" /><category term="fga" /><summary type="html"><![CDATA[As cloud applications grow in complexity, managing who has access to what can become a security nightmare. Traditional, role-based authorisation often results in overly broad permissions, granting access beyond what is necessary. This introduces unnecessary risk and makes compliance a constant struggle.]]></summary></entry><entry><title type="html">Release of sign-kernel-modules-secureboot v0.1</title><link href="https://www.notesoncloudcomputing.com/posts/2024-01-31-sign-kernel-modules-v0-1-release/" rel="alternate" type="text/html" title="Release of sign-kernel-modules-secureboot v0.1" /><published>2024-01-31T17:10:05+01:00</published><updated>2024-01-31T17:10:05+01:00</updated><id>https://www.notesoncloudcomputing.com/posts/sign-kernel-modules-v0.1-release</id><content type="html" xml:base="https://www.notesoncloudcomputing.com/posts/2024-01-31-sign-kernel-modules-v0-1-release/"><![CDATA[<p>I‚Äôm excited to announce the release of sign-kernel-modules-secureboot v0.1, the latest version that makes signing kernel modules straightforward.</p>

<h2 id="whats-changed">What‚Äôs Changed</h2>

<ol>
  <li><strong>Updated Documentation</strong></li>
  <li><strong>Streamlined Dependencies Install</strong></li>
  <li><strong>Minor Restyling</strong></li>
</ol>

<h2 id="changelog">Changelog</h2>

<p>For a detailed list of changes, please refer to the <a href="https://github.com/carlesloriente/sign-kernel-modules-secureboot/releases/tag/v0.1" target="_blank">changelog</a>.</p>]]></content><author><name>Carles Loriente</name></author><category term="virtualbox" /><category term="virtualization" /><category term="kernel-modules" /><category term="signing" /><category term="certificates" /><category term="uefi" /><category term="v0.1" /><category term="virtualbox" /><category term="kernel-modules" /><summary type="html"><![CDATA[I‚Äôm excited to announce the release of sign-kernel-modules-secureboot v0.1, the latest version that makes signing kernel modules straightforward.]]></summary></entry><entry><title type="html">How to sign kernel modules for SecureBoot in Virtualbox</title><link href="https://www.notesoncloudcomputing.com/posts/2024-01-30-virtualbox-signing-kernel-modules-secureboot/" rel="alternate" type="text/html" title="How to sign kernel modules for SecureBoot in Virtualbox" /><published>2024-01-30T10:23:45+01:00</published><updated>2024-01-30T10:23:45+01:00</updated><id>https://www.notesoncloudcomputing.com/posts/virtualbox-signing-kernel-modules-secureboot</id><content type="html" xml:base="https://www.notesoncloudcomputing.com/posts/2024-01-30-virtualbox-signing-kernel-modules-secureboot/"><![CDATA[<h2 id="simplifying-secure-boot-automating-kernel-module-signing-with-virtualbox-support">Simplifying Secure Boot: Automating Kernel Module Signing with VirtualBox Support</h2>

<p>Secure Boot is a security feature in modern systems, but it can pose challenges when dealing with kernel modules. For those (like me) who have struggled with signing kernel modules for use with VirtualBox, I have good news: An automated script that simplifies the entire process and ensures smooth integration.</p>

<h3 id="introducing-sign-kernel-modules-secureboot-script">Introducing: <a href="https://github.com/carlesloriente/sign-kernel-modules-secureboot" target="_blank">sign-kernel-modules-secureboot script</a></h3>

<h4 id="purpose">Purpose</h4>

<p>The primary goal of this script is to provide a hassle-free method for signing kernel modules compatible with Secure Boot, tailored explicitly for seamless integration with VirtualBox.</p>

<h4 id="key-features">Key Features</h4>

<ol>
  <li><strong>Automation:</strong> The script automates the entire signing process, saving users from the complexities of manual intervention.</li>
  <li><strong>VirtualBox Support:</strong> Ensures compatibility with VirtualBox, making it easier for users to run secure, signed kernel modules within virtualized environments.</li>
  <li><strong>Prerequisites Review:</strong> The script conducts a thorough review of system prerequisites, checking for required packages and missing folders. It ensures that your system is ready for the Secure Boot signing process.</li>
  <li><strong>Key Generation:</strong> Creates the necessary signing keys, streamlining the essential management process.</li>
</ol>

<h4 id="how-to">How to</h4>

<p><em>Clone the repository</em>:</p>

<div class="language-bash highlighter-rouge"><pre class="highlight "><button type="button" class="btn-clipboard float-end tooltip" aria-label="Copy to clipboard" data-bs-original-title="Copy to clipboard"><span class="tooltiptext">Copy to clipboard</span><span class="clipboard filter-white"></span></button>
<code>git clone https://github.com/carlesloriente/sign-kernel-modules-secureboot</code>
</pre></div>

<p><em>Navigate to the downloaded content</em>:</p>
<div class="language-bash highlighter-rouge"><pre class="highlight "><button type="button" class="btn-clipboard float-end tooltip" aria-label="Copy to clipboard" data-bs-original-title="Copy to clipboard"><span class="tooltiptext">Copy to clipboard</span><span class="clipboard filter-white"></span></button>
<code>cd sign-kernel-modules-secureboot</code>
</pre></div>

<p><em>Add execution permissions to the script</em>:</p>
<div class="language-bash highlighter-rouge"><pre class="highlight "><button type="button" class="btn-clipboard float-end tooltip" aria-label="Copy to clipboard" data-bs-original-title="Copy to clipboard"><span class="tooltiptext">Copy to clipboard</span><span class="clipboard filter-white"></span></button>
<code>chmod +x signing-kernel-modules.sh</code>
</pre></div>

<p><em>Run the script with sudo</em>:</p>
<div class="language-bash highlighter-rouge"><pre class="highlight "><button type="button" class="btn-clipboard float-end tooltip" aria-label="Copy to clipboard" data-bs-original-title="Copy to clipboard"><span class="tooltiptext">Copy to clipboard</span><span class="clipboard filter-white"></span></button>
<code>sudo ./signing-kernel-modules.sh</code>
</pre></div>

<h4 id="contribution-and-support">Contribution and Support</h4>

<p>Contributions are welcome! Feel free to submit issues, feature requests, or even pull requests.</p>

<h4 id="getting-started">Getting Started</h4>

<p>For detailed instructions and additional information, please refer to the repository documentation.</p>

<h4 id="conclusion">Conclusion</h4>

<p>Say goodbye to the headaches of signing kernel modules for Secure Boot. Give it a try, and let me know your thoughts!</p>

<p><em>Note: Ensure you have reviewed the system requirements and prerequisites outlined in the documentation before running the script.</em></p>

<p>Happy signing!</p>]]></content><author><name>Carles Loriente</name></author><category term="virtualbox" /><category term="virtualization" /><category term="kernel-modules" /><category term="signing" /><category term="certificates" /><category term="uefi" /><category term="virtualbox" /><category term="kernel-modules" /><summary type="html"><![CDATA[Simplifying Secure Boot: Automating Kernel Module Signing with VirtualBox Support]]></summary></entry><entry><title type="html">Clear local cache using terminal</title><link href="https://www.notesoncloudcomputing.com/posts/2023-08-06-flushcache-and-kill-mdnsresponder/" rel="alternate" type="text/html" title="Clear local cache using terminal" /><published>2023-08-06T12:53:45+02:00</published><updated>2023-08-06T12:53:45+02:00</updated><id>https://www.notesoncloudcomputing.com/posts/flushcache-and-kill-mDNSResponder</id><content type="html" xml:base="https://www.notesoncloudcomputing.com/posts/2023-08-06-flushcache-and-kill-mdnsresponder/"><![CDATA[<p>The local cache contains files and data that your system has saved to speed up certain processes, but sometimes, you want to ensure you‚Äôre seeing the most up-to-date version, which clearing the cache can help with.</p>

<p><em>Mac</em>:</p>

<div class="language-bash highlighter-rouge"><pre class="highlight "><button type="button" class="btn-clipboard float-end tooltip" aria-label="Copy to clipboard" data-bs-original-title="Copy to clipboard"><span class="tooltiptext">Copy to clipboard</span><span class="clipboard filter-white"></span></button>
<code>#!/bin/bash
sudo dscacheutil -flushcache;
sudo killall -HUP mDNSResponder;
sleep 2;</code>
</pre></div>

<p>Download the GitHub Gist <a href="https://gist.github.com/carlesloriente/1cf094165955b85617cd917573df65e1" target="_blank">fedora-configure-and-setup-ikev2.sh</a></p>

<p><em>Linux</em>:</p>

<div class="language-bash highlighter-rouge"><pre class="highlight "><button type="button" class="btn-clipboard float-end tooltip" aria-label="Copy to clipboard" data-bs-original-title="Copy to clipboard"><span class="tooltiptext">Copy to clipboard</span><span class="clipboard filter-white"></span></button>
<code>sudo /etc/init.d/nscd restart</code>
</pre></div>

<p>Background header image created using <a href="https://dreamstudio.ai" target="_blank">Dream Studio by stability.ai</a>.</p>

<blockquote>
  <p><em>Prompt</em>: Create an image portraying a Clear local cache memory using the command line interface in macos computer</p>
</blockquote>

<p><a href="/assets/images/dreamstudio/2K/Flushcache.webp" target="_blank">Download Full size image 2K</a></p>]]></content><author><name>Carles Loriente</name></author><category term="clear" /><category term="flushcache" /><category term="mDNSResponder" /><category term="flushcache" /><summary type="html"><![CDATA[The local cache contains files and data that your system has saved to speed up certain processes, but sometimes, you want to ensure you‚Äôre seeing the most up-to-date version, which clearing the cache can help with.]]></summary></entry><entry><title type="html">Fix Brew stuck/hangs updating in MacOs</title><link href="https://www.notesoncloudcomputing.com/posts/2023-08-05-fix-brew-stuck-updating/" rel="alternate" type="text/html" title="Fix Brew stuck/hangs updating in MacOs" /><published>2023-08-05T10:53:45+02:00</published><updated>2023-08-05T10:53:45+02:00</updated><id>https://www.notesoncloudcomputing.com/posts/fix-brew-stuck-updating</id><content type="html" xml:base="https://www.notesoncloudcomputing.com/posts/2023-08-05-fix-brew-stuck-updating/"><![CDATA[<p>The <a href="https://brew.sh/index" target="_blank">brew (Hombrebrew)</a> package manager is a mush have tool for developers using macOs. It enables you to install, update, and manage a wide range of software packages from the command line.
However, sometimes you might encounter issues when updating. If brew update command get stuck you can execute the following commands to fix it.</p>

<div class="language-rsc highlighter-rouge"><pre class="highlight "><button type="button" class="btn-clipboard float-end tooltip" aria-label="Copy to clipboard" data-bs-original-title="Copy to clipboard"><span class="tooltiptext">Copy to clipboard</span><span class="clipboard filter-white"></span></button>
<code>#!/bin/bash

# Full script for fixing homebrew update error
# Reset
sudo rm -rf /Library/Developer/CommandLineTools
xcode-select --install

# Reset homebrew-cask
brew untap homebrew/homebrew-cask --force
brew reinstall cask

# Reset homebrew-core
brew update-reset -d -v</code>
</pre></div>

<p>Download the GitHub Gist <a href="https://gist.github.com/carlesloriente/d565db45a60dd91a41be5bb9eb68079c" target="_blank">fix_brew_stuck_updating.bash</a></p>

<p>Background header image created using <a href="https://dreamstudio.ai" target="_blank">Dream Studio by stability.ai</a>.</p>

<blockquote>
  <p><em>Prompt</em>: Create an illustration of fixing Brew updating in MacOs</p>
</blockquote>

<p><a href="/assets/images/dreamstudio/2K/Fix-Brew-stuck-updating.webp" target="_blank">Download Full size image 2K</a></p>]]></content><author><name>Carles Loriente</name></author><category term="fix" /><category term="brew" /><category term="update" /><category term="stuck" /><category term="cli" /><category term="macos" /><category term="macos" /><category term="brew" /><summary type="html"><![CDATA[The brew (Hombrebrew) package manager is a mush have tool for developers using macOs. It enables you to install, update, and manage a wide range of software packages from the command line. However, sometimes you might encounter issues when updating. If brew update command get stuck you can execute the following commands to fix it.]]></summary></entry><entry><title type="html">VPN connection using p12 cert on Fedora 31+</title><link href="https://www.notesoncloudcomputing.com/posts/2021-04-24-configure-ikev2-vpn-connection-fedora/" rel="alternate" type="text/html" title="VPN connection using p12 cert on Fedora 31+" /><published>2021-04-24T12:43:23+02:00</published><updated>2021-04-24T12:43:23+02:00</updated><id>https://www.notesoncloudcomputing.com/posts/configure-ikev2-vpn-connection-fedora</id><content type="html" xml:base="https://www.notesoncloudcomputing.com/posts/2021-04-24-configure-ikev2-vpn-connection-fedora/"><![CDATA[<p>Using the following script you can install all the libraries needed for IKEv2 IPSec VPNs and configure a roadwarrior connection.</p>

<p>Requirements:</p>

<ul>
  <li>IKEv2 IPsec VPN gateway</li>
  <li>P12 User Certificate with passphrase</li>
  <li>Your Fedora OS should be in english language</li>
</ul>

<div class="language-bash highlighter-rouge"><pre class="highlight "><button type="button" class="btn-clipboard float-end tooltip" aria-label="Copy to clipboard" data-bs-original-title="Copy to clipboard"><span class="tooltiptext">Copy to clipboard</span><span class="clipboard filter-white"></span></button>
<code>#!/bin/bash

sudo dnf remove -y strongswan NetworkManager-strongswan NetworkManager-strongswan-gnome strongswan-libipsec
sudo dnf install -y libreswan NetworkManager-libreswan NetworkManager-libreswan-gnome ldns nss-tools firewall-config

echo 'Changing ipsec.conf'
sudo sed -i 's/# dnssec-enable=no/dnssec-enable=no/g' /etc/ipsec.conf
sudo sed -i 's/#DNSSEC=allow-downgrade/DNSSEC=false/g' /etc/systemd/resolved.conf

echo 'Configuring Firewall'
sudo firewall-cmd --permanent --zone=FedoraWorkstation --add-service ipsec
sudo firewall-cmd --permanent --add-port=500/udp
sudo firewall-cmd --permanent --add-port=4500/udp
sudo firewall-cmd --reload

sudo mkdir -p /var/lib/ipsec/nss
sudo chmod 755 /var/lib/ipsec/nss/ /etc/ipsec.d/
sudo chown ${name}:${name} /var/lib/ipsec/nss/
sudo chmod 644 /var/lib/ipsec/nss/*.*
sudo ipsec initnss

echo ''
read -p 'Enter your username: ' name
name=${name}

echo ''
read -p 'Enter the VPN gateway: ' vpn
vpn=${vpn}
echo 'Your ID is ${name}@${vpn}'

echo ''
echo 'Rename your cert file to ${name}@${vpn}.p12'
echo 'and save it to your ~/Documents folder'

read -p 'Press [Enter] to continue...'

if [ ! -f ${HOME}/Documents/${name}@${vpn}.p12 ]
then
    echo '~/Documents/${name}@${vpn}.p12 does not exist, error'
    exit 0
else
    echo ''
    echo 'Now you need the VPN password to import the certificate'
    sudo ipsec import ~/Documents/${name}@${vpn}.p12
fi

echo 'Create configuration file for IPSec connection, connection name awsibikev2'

sudo dd of=/etc/ipsec.d/roadwarriorclient.conf &lt;&lt; EOF
conn roadwarriorvpn
    ikev2=insist
    left=%defaultroute
    leftsubnet=0.0.0.0/0
    leftcert=${name}@${vpn}
    leftid=%fromcert
    leftmodecfgclient=yes
    right=${vpn}
    rightid=%fromcert
    rightsubnet=0.0.0.0/0
    rightca=%same
    authby=rsasig
    narrowing=yes
    mobike=yes
    auto=add
EOF

echo 'Added to .bashrc start_vpn and stop_vpn commands'
cat &lt;<EOT>&gt; $HOME/.bashrc
function start_vpn()
{
    sudo ipsec auto --up roadwarriorvpn
}
function stop_vpn()
{
    sudo ipsec auto --down roadwarriorvpn
}
EOT

sudo semanage fcontext -a -t ipsec_key_file_t '/var/lib/ipsec/nss'
sudo restorecon -v /var/lib/ipsec/*

sudo systemctl enable ipsec
sudo ipsec pluto --stderrlog --config /etc/ipsec.conf

echo 'Please reboot the system'&lt;/code&gt;
&lt;/pre&gt;&lt;/div&gt;

Download the GitHub Gist [fedora-configure-and-setup-ikev2.sh](https://gist.github.com/carlesloriente/4496fa54e444456435ec7e7e897a28e3){:target="_blank"}

Save the script to your $HOME folder and execute it in shell using the command: `sudo sh configure-and-setup-ikev2.sh`

When the script has finished the message "Please reboot the system" will appear on your terminal, please reboot it. After that your IKEv2 connection will be configured, you can start the connection using shell typing in "start_vpn" (without quotes), or stop it typing in "stop_vpn" (without quotes).' %}

## Related articles

[Configure a VPN server using IKEv2 IPSec with certificates on Mikrotik RouterOS](/posts/2021-04-23-configure-vpn-server-ikev2-ipsec-with-certificates-mikrotik-routeros/)
</EOT></code></pre></div>]]></content><author><name>Carles Loriente</name></author><category term="fedora" /><category term="vpn" /><category term="ikev2" /><category term="fedora" /><category term="vpn" /><summary type="html"><![CDATA[Using the following script you can install all the libraries needed for IKEv2 IPSec VPNs and configure a roadwarrior connection.]]></summary></entry><entry><title type="html">VPN server using IKEv2 IPSec with certificates on RouterOS</title><link href="https://www.notesoncloudcomputing.com/posts/2021-04-23-configure-vpn-server-ikev2-ipsec-with-certificates-mikrotik-routeros/" rel="alternate" type="text/html" title="VPN server using IKEv2 IPSec with certificates on RouterOS" /><published>2021-04-23T14:43:23+02:00</published><updated>2021-04-23T14:43:23+02:00</updated><id>https://www.notesoncloudcomputing.com/posts/configure-vpn-server-ikev2-ipsec-with-certificates-mikrotik-routeros</id><content type="html" xml:base="https://www.notesoncloudcomputing.com/posts/2021-04-23-configure-vpn-server-ikev2-ipsec-with-certificates-mikrotik-routeros/"><![CDATA[<p>The following file (rsc) for Mikrotik RouterOS v6.45+ configures an VPN usign IKEv2 IPSec</p>

<p>Before use it, please replace the following values:</p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">CA.yourdomain.com</code> with the CA domain</li>
  <li><code class="language-plaintext highlighter-rouge">YOURSTATE</code> with the state (optional)</li>
  <li><code class="language-plaintext highlighter-rouge">YOURORG</code> with the name of the organization</li>
  <li><code class="language-plaintext highlighter-rouge">YOURCOUNTRY</code> with the country code (https://www.iban.com/country-codes){:target=‚Äù_blank‚Äù}</li>
  <li><code class="language-plaintext highlighter-rouge">vpn.yourdomain.com</code> with the VPN hostname</li>
  <li><code class="language-plaintext highlighter-rouge">1.1.1.1</code> with the vpn IP</li>
</ul>

<div class="language-bash highlighter-rouge"><pre class="highlight "><button type="button" class="btn-clipboard float-end tooltip" aria-label="Copy to clipboard" data-bs-original-title="Copy to clipboard"><span class="tooltiptext">Copy to clipboard</span><span class="clipboard filter-white"></span></button>
<code># Mikrotik RouterOs IKEv2/IPSec VPN Full configuration RouterOS v6.45+

/system identity
set name=mikrotik_aws_vpn_ikev2

/system clock
set time-zone-name=Europe/Dublin

/system ntp client
set enabled=yes server-dns-names=pool.ntp.org

/system logging
add topics=firewall action=memory

/system logging 
add topics=ipsec,!debug action=memory

/interface bridge
add name=bridge

/interface wireless security-profiles
set [ find default=yes ] supplicant-identity=MikroTik

/interface bridge port
add bridge=bridge interface=ether1

/ip service
set telnet disabled=yes
set ftp disabled=yes
set www disabled=yes
set api disabled=yes
set api-ssl disabled=yes

/ip dhcp-client
add dhcp-options=hostname,clientid disabled=no interface=bridge

/ip pool
add name=pool-vpn ranges=10.0.254.200-10.0.254.250

## CA Certificate

/certificate add name=CA.yourdomain.com country=YOURCOUNTRY state=YOURSTATE locality=YOURSTATE organization=YOURORG common-name=CA.yourdomain.com subject-alt-name=DNS:CA.yourdomain.com key-size=2048 days-valid=3650 trusted=yes key-usage=digital-signature,key-encipherment,data-encipherment,key-cert-sign,crl-sign

/certificate sign CA.yourdomain.com

/certificate add name=vpn.yourdomain.com country=ES state=YOURSTATE locality=YOURSTATE organization=YOURORG unit=VPN common-name=vpn.yourdomain.com subject-alt-name=DNS:vpn.yourdomain.com key-size=2048 days-valid=1095 trusted=yes key-usage=tls-server

/certificate sign vpn.yourdomain.com ca=CA.yourdomain.com

## Client Certificate

certificate add name=~clienttemplate@vpn.yourdomain.com country=ES state=YOURSTATE locality=YOURSTATE organization=YOURORG common-name=~client-template@vpn.yourdomain.com subject-alt-name=email:~clienttemplate@vpn.yourdomain.com key-size=2048 days-valid=365 trusted=yes key-usage=tls-client

## IPSec

/ip ipsec mode-config add address-pool=pool-vpn address-prefix-length=32 name="modeconf vpn.yourdomain.com" split-include=0.0.0.0/0 static-dns=8.8.8.8 system-dns=no

/ip ipsec proposal add auth-algorithms=sha512,sha256,sha1 enc-algorithms=aes-256-cbc,aes-256-ctr,aes-256-gcm,aes-192-ctr,aes-192-gcm,aes-128-cbc,aes-128-ctr,aes-128-gcm lifetime=8h name="proposal vpn.yourdomain.com" pfs-group=none

/ip ipsec profile add dh-group=modp2048,modp1536,modp1024 enc-algorithm=aes-256,aes-192,aes-128 hash-algorithm=sha256 name="profile vpn.yourdomain.com" nat-traversal=yes proposal-check=obey

/ip ipsec policy group add name="group vpn.yourdomain.com"

/ip ipsec policy add dst-address=10.0.254.0/24 group="group vpn.yourdomain.com" proposal="proposal vpn.yourdomain.com" src-address=0.0.0.0/0 template=yes sa-src-address=0.0.0.0 sa-dst-address=0.0.0.0 ipsec-protocols=esp level=require protocol=all action=encrypt

/ip ipsec peer add exchange-mode=ike2 address=0.0.0.0/0 name="peer" passive=yes send-initial-contact=yes profile="profile vpn.yourdomain.com"

## Firewall

/ip firewall nat
add action=masquerade chain=srcnat out-interface=bridge src-address=10.0.254.200-10.0.254.250
add chain=srcnat

## Input Chain Rules

/ip firewall filter
add action=accept chain=input connection-state=established,related,untracked comment="DEFAULT: Accept established, related, and untracked traffic."
add action=drop chain=input connection-state=invalid comment="DEFAULT: Drop invalid traffic 1."
add action=accept chain=input protocol=icmp comment="DEFAULT: Accept ICMP traffic."

## Forward Chain Rules

/ip firewall filter
add action=accept chain=forward ipsec-policy=in,ipsec comment="DEFAULT: Accept In IPsec policy."
add action=accept chain=forward ipsec-policy=out,ipsec comment="DEFAULT: Accept Out IPsec policy."
add action=accept chain=forward connection-state=established,related,untracked comment="DEFAULT: Accept established, related, and untracked traffic."
add action=drop chain=forward connection-state=invalid comment="DEFAULT: Drop invalid traffic 2."

## No WAN network

/ip firewall filter add place-before=1 protocol=udp dst-port=500,4500 dst-address=1.1.1.1 action=accept chain=input comment="Allow UDP 500,4500 IPSec for peer"
/ip firewall filter add place-before=1 protocol=ipsec-esp dst-address=1.1.1.1 action=accept chain=input comment="Allow IPSec-esp for peer"
/ip firewall filter add chain=input src-address=10.0.254.0/24 ipsec-policy=in,ipsec action=accept place-before=1 disabled=no comment="IKE2: Allow ALL incoming traffic from 10.0.254.0/24 to this RouterOS"
/ip firewall filter add chain=forward src-address=10.0.254.0/24 dst-address=10.2.0.0/16 ipsec-policy=in,ipsec action=accept place-before=1 disabled=no comment="IKE2: Allow ALL forward traffic from 10.0.254.0/24 to AWS IRELAND network"
/ip firewall filter add chain=forward src-address=10.0.254.0/24 dst-address=0.0.0.0/0 ipsec-policy=in,ipsec action=accept place-before=1 disabled=no comment="IKE2: Allow ALL forward traffic from 10.0.254.0/24 to ANY network"

## WAN

/ip firewall nat add place-before=0 chain=srcnat src-address=10.0.254.0/24 out-interface=ether1 ipsec-policy=out,none action=masquerade to-addresses=1.1.1.1 comment="SRC-NAT IKE2:10.0.254.0/24 --&gt; ether1 traffic"
/ip firewall mangle add action=change-mss chain=forward new-mss=1360 src-address=10.0.254.0/24 protocol=tcp tcp-flags=syn tcp-mss=!0-1360 ipsec-policy=in,ipsec passthrough=yes comment="IKE2: Clamp TCP MSS from 10.0.254.0/24 to ANY"
/ip firewall mangle add action=change-mss chain=forward new-mss=1360 dst-address=10.0.254.0/24 protocol=tcp tcp-flags=syn tcp-mss=!0-1360 ipsec-policy=out,ipsec passthrough=yes comment="IKE2: Clamp TCP MSS from ANY to 10.0.254.0/24"

/certificate export-certificate CA.yourdomain.com</code>
</pre></div>

<p>Download the GitHub Gist <a href="https://gist.github.com/carlesloriente/70fbc993e867f838f8d476097d372518" target="_blank">mikrotik_routeros_vpn-ikev2-ipsec.rsc</a></p>

<p>Then you can use the following commands in routeros to create the user certificates, please remember to replace using your own values</p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">CA.yourdomain.com</code> with the CA domain</li>
  <li><code class="language-plaintext highlighter-rouge">vpn.yourdomain.com</code> with the VPN hostname</li>
  <li><code class="language-plaintext highlighter-rouge">1.1.1.1</code> with the vpn IP</li>
  <li><code class="language-plaintext highlighter-rouge">USERNAME</code> with the username of the VPN connection</li>
  <li><code class="language-plaintext highlighter-rouge">YOURPASSPHRASE</code> with the passphrase of this certificate</li>
</ul>

<div class="language-rsc highlighter-rouge"><pre class="highlight "><button type="button" class="btn-clipboard float-end tooltip" aria-label="Copy to clipboard" data-bs-original-title="Copy to clipboard"><span class="tooltiptext">Copy to clipboard</span><span class="clipboard filter-white"></span></button>
<code># Certificate creation for users

/certificate add copy-from=~clienttemplate@vpn.yourdomain.com name=USERNAME@vpn.yourdomain.com common-name=USERNAME@vpn.yourdomain.com subject-alt-name=email:USERNAME@vpn.yourdomain.com
/certificate sign USERNAME@vpn.yourdomain.com ca=CA.yourdomain.com
/certificate export-certificate USERNAME@vpn.yourdomain.com type=pkcs12 export-passphrase=YOURPASSPHRASE
/ip ipsec identity add auth-method=digital-signature certificate=vpn.yourdomain.com remote-certificate=USERNAME@vpn.yourdomain.com generate-policy=port-strict match-by=certificate mode-config="modeconf vpn.yourdomain.com" peer="peer 1.1.1.1" policy-template-group="group vpn.yourdomain.com" remote-id=user-fqdn:USERNAME@vpn.yourdomain.com</code>
</pre></div>

<p>Download the GitHub Gist <a href="https://gist.github.com/carlesloriente/94a203608009ee1bb3c6c335317e11a6" target="_blank">mikrotik-routeros_create-ipsec-ikev2-certificates_vpn_users.rsc</a></p>

<p>The next step is download the certificates (e.g. using winbox) to your computer and set up the VPN connection.</p>

<h2 id="related-articles">Related articles</h2>

<p><a href="/posts/2021-04-24-configure-ikev2-vpn-connection-fedora/">IKEv2 RoadWarrior VPN connection using p12 certificate on Fedora 31+</a></p>]]></content><author><name>Carles Loriente</name></author><category term="routeros" /><category term="mikrotik" /><category term="vpn" /><category term="routeros" /><category term="mikrotik" /><summary type="html"><![CDATA[The following file (rsc) for Mikrotik RouterOS v6.45+ configures an VPN usign IKEv2 IPSec]]></summary></entry><entry><title type="html">Configure a VPN server using L2TP IPSec with Mikrotik RouterOS</title><link href="https://www.notesoncloudcomputing.com/posts/2020-08-02-configure-vpn-server-l2tp-ipsec-mikrotik-routeros/" rel="alternate" type="text/html" title="Configure a VPN server using L2TP IPSec with Mikrotik RouterOS" /><published>2020-08-02T12:43:23+02:00</published><updated>2020-08-02T12:43:23+02:00</updated><id>https://www.notesoncloudcomputing.com/posts/configure-vpn-server-l2tp-ipsec-mikrotik-routeros</id><content type="html" xml:base="https://www.notesoncloudcomputing.com/posts/2020-08-02-configure-vpn-server-l2tp-ipsec-mikrotik-routeros/"><![CDATA[<p>The following file (rsc) for Mikrotik RouterOS v6.45+ configures an VPN usign L2TP</p>

<div class="language-rsc highlighter-rouge"><pre class="highlight "><button type="button" class="btn-clipboard float-end tooltip" aria-label="Copy to clipboard" data-bs-original-title="Copy to clipboard"><span class="tooltiptext">Copy to clipboard</span><span class="clipboard filter-white"></span></button>
<code># Mikrotik RouterOs L2TP/IPSec VPN Full configuration

/interface bridge
add fast-forward=no name=bridge

/interface ethernet
set [ find default-name=ether1 ] advertise=10M-half,10M-full,100M-half,100M-full,1000M-half,1000M-full

/interface bridge port
add bridge=bridge hw=no interface=ether1

/snmp community
set [ find default=yes ] addresses=0.0.0.0/0

/system clock
set time-zone-name=Europe/Dublin

/system identity
set name=mikrotik_vpn

/system ntp client
set enabled=yes server-dns-names=pool.ntp.org

/ip service
set telnet disabled=yes
set ftp disabled=yes
set www disabled=yes
set api disabled=yes
set api-ssl disabled=yes

/ip pool
add name=pool-vpn ranges=10.1.1.2-10.1.1.250

/ip ipsec peer
add name=l2tpserver passive=yes

/ip ipsec proposal
set [ find default=yes ] enc-algorithms=3des

/ip ipsec mode-config
add address-pool=pool-vpn name=cfg1 static-dns=8.8.8.8 system-dns=no

/ppp profile
add bridge=bridge local-address=pool-vpn name=profile-vpn remote-address=pool-vpn
add bridge=bridge dns-server=8.8.8.8 local-address=pool-vpn name=ipsec_vpn remote-address=pool-vpn

/interface l2tp-server server
set authentication=mschap1,mschap2 default-profile=ipsec_vpn enabled=yes

/ip dhcp-client
add !dhcp-options disabled=no interface=ether1
add disabled=no interface=bridge

/ip firewall filter
add action=accept chain=input protocol=ipsec-esp

/ip firewall nat
add action=masquerade chain=srcnat out-interface=bridge src-address=10.1.1.2-10.1.1.250
add action=accept chain=srcnat

/ip ipsec identity
add generate-policy=port-override peer=l2tpserver secret="ChangeThisSecret"

/ppp secret
add name=vpn_user password="ChangeThisPasword" profile=profile-vpn service=any</code>
</pre></div>

<p>Download the GitHub Gist <a href="https://gist.github.com/carlesloriente/ee82901e3a67844eaca3097c2352bc03" target="_blank">mikrotik_routeros_vpn-l2tp-ipsec.rsc</a></p>]]></content><author><name>Carles Loriente</name></author><category term="routeros" /><category term="mikrotik" /><category term="vpn" /><category term="routeros" /><category term="mikrotik" /><summary type="html"><![CDATA[The following file (rsc) for Mikrotik RouterOS v6.45+ configures an VPN usign L2TP]]></summary></entry><entry><title type="html">Configure a VPN server using PPTP with Mikrotik RouterOS</title><link href="https://www.notesoncloudcomputing.com/posts/2020-08-01-configure-vpn-server-pptp-mikrotik-routeros/" rel="alternate" type="text/html" title="Configure a VPN server using PPTP with Mikrotik RouterOS" /><published>2020-08-01T10:23:33+02:00</published><updated>2020-08-01T10:23:33+02:00</updated><id>https://www.notesoncloudcomputing.com/posts/configure-vpn-server-pptp-mikrotik-routeros</id><content type="html" xml:base="https://www.notesoncloudcomputing.com/posts/2020-08-01-configure-vpn-server-pptp-mikrotik-routeros/"><![CDATA[<p>The following file (rsc) for Mikrotik RouterOS v6.45+ configures an VPN usign PPTP</p>

<div class="language-rsc highlighter-rouge"><pre class="highlight "><button type="button" class="btn-clipboard float-end tooltip" aria-label="Copy to clipboard" data-bs-original-title="Copy to clipboard"><span class="tooltiptext">Copy to clipboard</span><span class="clipboard filter-white"></span></button>
<code># Mikrotik RouterOs PPTP VPN Full configuration

/interface bridge
add fast-forward=no name=bridge

/interface ethernet
set [ find default-name=ether1 ] advertise=10M-half,10M-full,100M-half,100M-full,1000M-half,1000M-full

/interface bridge port
add bridge=bridge hw=no interface=ether1

/snmp community
set [ find default=yes ] addresses=0.0.0.0/0

/system clock
set time-zone-name=Europe/Dublin

/system identity
set name=mikrotik_vpn

/system ntp client
set enabled=yes server-dns-names=pool.ntp.org

/ip service
set telnet disabled=yes
set ftp disabled=yes
set www disabled=yes
set api disabled=yes
set api-ssl disabled=yes

/ip pool
add name=pool-vpn ranges=10.1.1.2-10.1.1.250

/ppp profile
add bridge=bridge local-address=pool-vpn name=profile-vpn remote-address=pool-vpn
add bridge=bridge dns-server=8.8.8.8 local-address=pool-vpn name=pptp_vpn remote-address=pool-vpn

/ip dhcp-client
add !dhcp-options disabled=no interface=ether1
add disabled=no interface=bridge

/ip firewall filter
add chain=input dst-port=1194 protocol=tcp

/ip firewall nat
add action=masquerade chain=srcnat out-interface=bridge src-address=10.1.1.2-10.1.1.250
add chain=srcnat

/ppp secret
add name=vpn_user password="ChangeThisPasword" profile=profile-vpn service=any</code>
</pre></div>

<p>Download the GitHub Gist <a href="https://gist.github.com/carlesloriente/3ba0d4e9902cd517c76415786fca11cd" target="_blank">mikrotik_routeros_vpn-pptp.rsc</a></p>]]></content><author><name>Carles Loriente</name></author><category term="routeros" /><category term="mikrotik" /><category term="vpn" /><category term="routeros" /><category term="mikrotik" /><summary type="html"><![CDATA[The following file (rsc) for Mikrotik RouterOS v6.45+ configures an VPN usign PPTP]]></summary></entry></feed>